openapi: 3.0.3
info:
  title: AutoTeam Worker API
  description: |
    HTTP API for monitoring and managing AutoTeam workers.
    
    This API provides endpoints to monitor worker health, status, logs, flow configuration,
    metrics, and configuration. All workers expose the same standardized API interface.
  version: 2.0.0
  contact:
    name: AutoTeam
    url: https://github.com/your-org/auto-team
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT

servers:
  - url: http://localhost:8080
    description: Local worker server

tags:
  - name: health
    description: Health check endpoints
  - name: status
    description: Worker status endpoints
  - name: logs
    description: Log management endpoints
  - name: flow
    description: Flow configuration endpoints
  - name: metrics
    description: Performance metrics endpoints
  - name: config
    description: Configuration endpoints

paths:
  /health:
    get:
      summary: Worker health check
      description: Returns the health status and availability of the worker
      operationId: getHealth
      tags: [health]
      responses:
        '200':
          description: Worker health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /status:
    get:
      summary: Worker status
      description: Returns current worker operational status and mode
      operationId: getStatus
      tags: [status]
      responses:
        '200':
          description: Worker status information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /logs:
    get:
      summary: List worker logs
      description: Returns list of available log files
      operationId: getLogs
      tags: [logs]
      parameters:
        - name: role
          in: query
          description: Filter logs by role (collector, executor, both) - auto-determined from file paths and names
          required: false
          schema:
            type: string
            enum: [collector, executor, both]
        - name: limit
          in: query
          description: Maximum number of log files to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: List of log files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsResponse'
        '400':
          description: Bad request - invalid parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /logs/{filename}:
    get:
      summary: Download log file
      description: Download specific log file content
      operationId: getLogFile
      tags: [logs]
      parameters:
        - name: filename
          in: path
          description: Name of the log file to download
          required: true
          schema:
            type: string
            pattern: '^[a-zA-Z0-9_.-]+\.log$'
        - name: tail
          in: query
          description: Number of last lines to return (tail behavior)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10000
      responses:
        '200':
          description: Log file content
          content:
            text/plain:
              schema:
                type: string
        '400':
          description: Bad request - invalid filename or parameters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Log file not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /flow:
    get:
      summary: Worker flow configuration
      description: Returns the current flow configuration and execution status
      operationId: getFlow
      tags: [flow]
      responses:
        '200':
          description: Worker flow configuration and status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /flow/steps:
    get:
      summary: Flow step details
      description: Returns detailed information about each flow step
      operationId: getFlowSteps
      tags: [flow]
      responses:
        '200':
          description: Detailed flow step information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowStepsResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /metrics:
    get:
      summary: Worker metrics
      description: Returns performance metrics and statistics for the worker
      operationId: getMetrics
      tags: [metrics]
      responses:
        '200':
          description: Worker metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /config:
    get:
      summary: Worker configuration
      description: Returns sanitized worker configuration (sensitive data removed)
      operationId: getConfig
      tags: [config]
      responses:
        '200':
          description: Worker configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /openapi.yaml:
    get:
      summary: OpenAPI specification
      description: Returns the OpenAPI specification for this API
      operationId: getOpenAPISpec
      tags: [docs]
      responses:
        '200':
          description: OpenAPI specification
          content:
            application/x-yaml:
              schema:
                type: string

  /docs/:
    get:
      summary: API documentation
      description: Swagger UI for interactive API documentation
      operationId: getSwaggerUI
      tags: [docs]
      responses:
        '200':
          description: Swagger UI HTML page
          content:
            text/html:
              schema:
                type: string

components:
  schemas:
    # Response wrapper types
    HealthResponse:
      type: object
      x-go-type: types.HealthResponse
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - status
        - timestamp
        - agent
      properties:
        status:
          type: string
          description: Overall health status
          enum: [healthy, unhealthy]
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp
        agent:
          $ref: '#/components/schemas/WorkerInfo'
        checks:
          type: object
          description: Individual health check results
          additionalProperties:
            $ref: '#/components/schemas/HealthCheck'

    StatusResponse:
      type: object
      x-go-type: types.StatusResponse
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - status
        - mode
        - timestamp
        - agent
      properties:
        status:
          type: string
          description: Current operational status
          enum: [idle, running, error]
        mode:
          type: string
          description: Current operational mode
          enum: [both]
        timestamp:
          type: string
          format: date-time
          description: Status timestamp
        agent:
          $ref: '#/components/schemas/WorkerInfo'
        uptime:
          type: string
          description: Worker uptime duration

    LogsResponse:
      type: object
      x-go-type: types.LogsResponse
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - logs
        - total
        - timestamp
      properties:
        logs:
          type: array
          items:
            $ref: '#/components/schemas/LogFile'
        total:
          type: integer
          description: Total number of log files
        timestamp:
          type: string
          format: date-time
          description: Response timestamp

    MetricsResponse:
      type: object
      x-go-type: types.MetricsResponse
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - metrics
        - timestamp
      properties:
        metrics:
          $ref: '#/components/schemas/WorkerMetrics'
        timestamp:
          type: string
          format: date-time
          description: Response timestamp

    ConfigResponse:
      type: object
      x-go-type: types.ConfigResponse
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - config
        - timestamp
      properties:
        config:
          $ref: '#/components/schemas/WorkerConfig'
        timestamp:
          type: string
          format: date-time
          description: Response timestamp

    FlowResponse:
      type: object
      x-go-type: types.FlowResponse
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - flow
        - timestamp
      properties:
        flow:
          $ref: '#/components/schemas/FlowInfo'
        timestamp:
          type: string
          format: date-time
          description: Response timestamp

    FlowStepsResponse:
      type: object
      x-go-type: types.FlowStepsResponse
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - steps
        - total
        - timestamp
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/FlowStepInfo'
        total:
          type: integer
          description: Total number of flow steps
        timestamp:
          type: string
          format: date-time
          description: Response timestamp

    # Core data types - reuse existing types
    WorkerInfo:
      type: object
      x-go-type: types.WorkerInfo
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - name
        - type
        - version
      properties:
        name:
          type: string
          description: Worker name
        type:
          type: string
          description: Worker type (derived from primary agent type)
        version:
          type: string
          description: Worker version
        available:
          type: boolean
          description: Worker availability status

    HealthCheck:
      type: object
      x-go-type: types.HealthCheck
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - status
      properties:
        status:
          type: string
          description: Health check result
          enum: [pass, fail]
        message:
          type: string
          description: Health check message

    LogFile:
      type: object
      x-go-type: types.LogFile
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - filename
        - size
        - modified
      properties:
        filename:
          type: string
          description: Log file name
        size:
          type: integer
          format: int64
          description: File size in bytes
        modified:
          type: string
          format: date-time
          description: Last modified timestamp
        role:
          type: string
          description: Worker role associated with log (auto-determined)
          enum: [collector, executor, both]

    WorkerMetrics:
      type: object
      x-go-type: types.WorkerMetrics
      x-go-type-import:
        path: autoteam/internal/types
      properties:
        uptime:
          type: string
          description: Agent uptime duration
        avg_execution_time:
          type: string
          description: Average flow execution time
        last_activity:
          type: string
          format: date-time
          description: Timestamp of last activity

    WorkerConfig:
      type: object
      x-go-type: types.WorkerConfig
      x-go-type-import:
        path: autoteam/internal/types
      description: Sanitized worker configuration
      properties:
        name:
          type: string
          description: Worker name
        type:
          type: string
          description: Worker type (derived from primary agent type)
        enabled:
          type: string
          description: Worker enabled status as string
        version:
          type: string
          description: Worker version
        team_name:
          type: string
          description: Team name for this worker
        flow_steps:
          type: integer
          description: Number of flow steps configured

    FlowInfo:
      type: object
      x-go-type: types.FlowInfo
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - total_steps
        - enabled_steps
      properties:
        total_steps:
          type: integer
          description: Total number of steps in the flow
        enabled_steps:
          type: integer
          description: Number of enabled/active steps
        last_execution:
          type: string
          format: date-time
          description: Timestamp of last flow execution
        execution_count:
          type: integer
          description: Total number of flow executions
        success_rate:
          type: number
          format: float
          description: Success rate of flow executions (0.0-1.0)

    FlowStepInfo:
      type: object
      x-go-type: types.FlowStepInfo
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - name
        - type
      properties:
        # FlowStep fields (embedded)
        name:
          type: string
          description: Unique step name
        type:
          type: string
          description: Agent type (claude, gemini, qwen, debug, custom, etc.)
        args:
          type: array
          items:
            type: string
          description: Agent-specific arguments
        env:
          type: object
          additionalProperties:
            type: string
          description: Environment variables for the step
        depends_on:
          type: array
          items:
            type: string
          description: List of step names this step depends on
        input:
          type: string
          description: Input prompt for the step (may contain templates)
        output:
          type: string
          description: Output transformation template
        skip_when:
          type: string
          description: Skip condition template
        # FlowStepRuntime fields (embedded)
        enabled:
          type: boolean
          description: Whether the step is enabled
        last_execution:
          type: string
          format: date-time
          description: Timestamp of last execution
        execution_count:
          type: integer
          description: Number of times this step has been executed
        success_count:
          type: integer
          description: Number of successful executions
        last_output:
          type: string
          description: Output from last execution (truncated)
        last_error:
          type: string
          description: Error from last execution (if any)

    ErrorResponse:
      type: object
      x-go-type: types.ErrorResponse
      x-go-type-import:
        path: autoteam/internal/types
      required:
        - error
        - timestamp
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        timestamp:
          type: string
          format: date-time
          description: Error timestamp

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: Optional API key for authentication

# Optional API key security (with fallback to unauthenticated access)
security:
  - ApiKeyAuth: []
  - {} # Allow unauthenticated access as fallback
