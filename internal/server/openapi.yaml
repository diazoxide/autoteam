openapi: 3.0.3
info:
  title: AutoTeam Worker API
  description: HTTP API for monitoring and managing AutoTeam workers
  version: 1.0.0
  contact:
    name: AutoTeam
    url: https://github.com/your-org/auto-team

servers:
  - url: http://localhost:8080
    description: Local worker server

paths:
  /health:
    get:
      summary: Worker health check
      description: Returns the health status and availability of the worker
      operationId: getHealth
      responses:
        '200':
          description: Worker health status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /status:
    get:
      summary: Worker status
      description: Returns current worker operational status and mode
      operationId: getStatus
      responses:
        '200':
          description: Worker status information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /logs:
    get:
      summary: List worker logs
      description: Returns list of available log files
      operationId: getLogs
      parameters:
        - name: role
          in: query
          description: Filter logs by role (collector, executor, both) - auto-determined from file paths and names
          required: false
          schema:
            type: string
        - name: limit
          in: query
          description: Maximum number of log files to return
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 50
      responses:
        '200':
          description: List of log files
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogsResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /flow:
    get:
      summary: Worker flow configuration
      description: Returns the current flow configuration and execution status
      operationId: getFlow
      responses:
        '200':
          description: Worker flow configuration and status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /flow/steps:
    get:
      summary: Flow step details
      description: Returns detailed information about each flow step
      operationId: getFlowSteps
      responses:
        '200':
          description: Detailed flow step information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FlowStepsResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /logs/{filename}:
    get:
      summary: Download log file
      description: Download specific log file content
      operationId: getLogFile
      parameters:
        - name: filename
          in: path
          description: Name of the log file to download
          required: true
          schema:
            type: string
        - name: tail
          in: query
          description: Number of last lines to return (tail behavior)
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 10000
      responses:
        '200':
          description: Log file content
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Log file not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'


  /metrics:
    get:
      summary: Worker metrics
      description: Returns performance metrics and statistics for the worker
      operationId: getMetrics
      responses:
        '200':
          description: Worker metrics
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricsResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /config:
    get:
      summary: Worker configuration
      description: Returns sanitized worker configuration (sensitive data removed)
      operationId: getConfig
      responses:
        '200':
          description: Worker configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    HealthResponse:
      type: object
      required:
        - status
        - timestamp
        - agent
      properties:
        status:
          type: string
          description: Overall health status (healthy, unhealthy)
        timestamp:
          type: string
          format: date-time
          description: Health check timestamp
        agent:
          $ref: '#/components/schemas/WorkerInfo'
        checks:
          type: object
          description: Individual health check results
          additionalProperties:
            type: object
            properties:
              status:
                type: string
                description: Health check result (pass, fail)
              message:
                type: string

    StatusResponse:
      type: object
      required:
        - status
        - mode
        - timestamp
        - agent
      properties:
        status:
          type: string
          description: Current operational status (idle, running, error, etc.)
        mode:
          type: string
          description: Current operational mode (both for workers)
        timestamp:
          type: string
          format: date-time
          description: Status timestamp
        agent:
          $ref: '#/components/schemas/WorkerInfo'
        uptime:
          type: string
          description: Worker uptime duration

    LogsResponse:
      type: object
      required:
        - logs
        - total
        - timestamp
      properties:
        logs:
          type: array
          items:
            $ref: '#/components/schemas/LogFile'
        total:
          type: integer
          description: Total number of log files
        timestamp:
          type: string
          format: date-time
          description: Response timestamp


    MetricsResponse:
      type: object
      required:
        - metrics
        - timestamp
      properties:
        metrics:
          type: object
          properties:
            uptime:
              type: string
              description: Agent uptime duration
            tasks_processed:
              type: integer
              description: Total tasks processed
            tasks_success:
              type: integer
              description: Successfully completed tasks
            tasks_failed:
              type: integer
              description: Failed tasks
            avg_execution_time:
              type: string
              description: Average task execution time
            last_activity:
              type: string
              format: date-time
              description: Timestamp of last activity
        timestamp:
          type: string
          format: date-time
          description: Response timestamp

    ConfigResponse:
      type: object
      required:
        - config
        - timestamp
      properties:
        config:
          $ref: '#/components/schemas/WorkerConfig'
        timestamp:
          type: string
          format: date-time
          description: Response timestamp

    WorkerInfo:
      type: object
      required:
        - name
        - type
        - version
      properties:
        name:
          type: string
          description: Worker name
        type:
          type: string
          description: Worker type (derived from primary agent type)
        version:
          type: string
          description: Worker version
        available:
          type: boolean
          description: Worker availability status

    LogFile:
      type: object
      required:
        - filename
        - size
        - modified
      properties:
        filename:
          type: string
          description: Log file name
        size:
          type: integer
          description: File size in bytes
        modified:
          type: string
          format: date-time
          description: Last modified timestamp
        role:
          type: string
          description: Worker role associated with log (collector, executor, both) - auto-determined

    FlowResponse:
      type: object
      required:
        - flow
        - timestamp
      properties:
        flow:
          $ref: '#/components/schemas/FlowInfo'
        timestamp:
          type: string
          format: date-time
          description: Response timestamp

    FlowStepsResponse:
      type: object
      required:
        - steps
        - total
        - timestamp
      properties:
        steps:
          type: array
          items:
            $ref: '#/components/schemas/FlowStep'
        total:
          type: integer
          description: Total number of flow steps
        timestamp:
          type: string
          format: date-time
          description: Response timestamp

    FlowInfo:
      type: object
      required:
        - total_steps
        - enabled_steps
      properties:
        total_steps:
          type: integer
          description: Total number of steps in the flow
        enabled_steps:
          type: integer
          description: Number of enabled/active steps
        last_execution:
          type: string
          format: date-time
          description: Timestamp of last flow execution
        execution_count:
          type: integer
          description: Total number of flow executions
        success_rate:
          type: number
          format: float
          description: Success rate of flow executions (0.0-1.0)

    FlowStep:
      type: object
      required:
        - name
        - type
      properties:
        name:
          type: string
          description: Unique step name
        type:
          type: string
          description: Agent type (claude, gemini, qwen, debug, custom, etc.)
        enabled:
          type: boolean
          description: Whether the step is enabled
          default: true
        depends_on:
          type: array
          items:
            type: string
          description: List of step names this step depends on
        input:
          type: string
          description: Input prompt for the step (may contain templates)
        output:
          type: string
          description: Output transformation template
        skip_when:
          type: string
          description: Skip condition template
        args:
          type: array
          items:
            type: string
          description: Agent-specific arguments
        env:
          type: object
          additionalProperties:
            type: string
          description: Environment variables for the step
        last_execution:
          type: string
          format: date-time
          description: Timestamp of last execution
        execution_count:
          type: integer
          description: Number of times this step has been executed
        success_count:
          type: integer
          description: Number of successful executions
        last_output:
          type: string
          description: Output from last execution (truncated)
        last_error:
          type: string
          description: Error from last execution (if any)

    WorkerConfig:
      type: object
      description: Sanitized worker configuration matching Go struct
      properties:
        name:
          type: string
          description: Worker name
        type:
          type: string
          description: Worker type (derived from primary agent type)
        enabled:
          type: string
          description: Worker enabled status as string
        version:
          type: string
          description: Worker version
        team_name:
          type: string
          description: Team name for this worker
        flow_steps:
          type: integer
          description: Number of flow steps configured

    ErrorResponse:
      type: object
      required:
        - error
        - timestamp
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        timestamp:
          type: string
          format: date-time
          description: Error timestamp

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

security:
  - ApiKeyAuth: []
  - {}  # Allow unauthenticated access as fallback