# Basic AutoTeam Configuration
# Flow-based setup with parallel task collection and processing

agents:
  - name: "developer"
    prompt: |
      You are a developer agent responsible for implementing features and fixing bugs.
    settings:
      service:
        environment:
          GITHUB_TOKEN: ${DEVELOPER_GITHUB_TOKEN}
    
  - name: "reviewer"
    prompt: |
      You are a code reviewer focused on quality and best practices.
    settings:
      service:
        environment:
          GITHUB_TOKEN: ${REVIEWER_GITHUB_TOKEN}

settings:
  sleep_duration: 30
  service:
    image: "node:18.17.1"
    user: "developer"
  team_name: "basic-team"
  install_deps: true
  
  # Dynamic Flow Configuration
  flow:
    # Parallel task collection from different sources
    - name: collect_notifications
      type: gemini
      args: ["--model", "gemini-2.5-flash"]
      prompt: |
        You are a notification collector. Get unread GitHub notifications and list them.
        Use GitHub MCP to get notifications in format: {NOTIFICATION URL} - {NOTIFICATION TEXT}
        Output: List of notifications that need attention.
        
    - name: collect_assigned_tasks
      type: gemini
      args: ["--model", "gemini-2.5-flash"]
      prompt: |
        Collect assigned issues and PRs that need attention.
        Use GitHub MCP to find assigned work.
        Output: List of assigned tasks with priority.
        
    # Unified task processing after collection
    - name: process_tasks
      type: claude
      depends_on: [collect_notifications, collect_assigned_tasks]
      prompt: |
        Process all collected tasks from previous steps.
        For comments: respond publicly on GitHub
        For PR reviews: submit review with feedback  
        For assigned issues: implement and create PR
        Prioritize based on urgency and context.
        
    # Optional summary step (runs only if tasks were processed)
    - name: send_summary
      type: claude
      depends_on: [process_tasks]
      skip_when: "{{- index .inputs 0 | trim | eq \"No tasks processed\" -}}"
      prompt: |
        Send a summary of completed work to the team.
        Use GitHub to comment on processed items or create status updates.
      
  # MCP Server Configuration
  mcp_servers:
    github:
      command: /opt/autoteam/bin/github-mcp-server
      args: ["stdio"]
      env:
        GITHUB_PERSONAL_ACCESS_TOKEN: $$GITHUB_TOKEN
